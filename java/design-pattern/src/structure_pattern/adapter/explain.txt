#어댑터(Adapter)
- 재사용하려는 클래스가 제공하는 인터페이스와 클라이언트가 사용하는 인터페이스가 다를 경우가 있는 데 어댑터 클래스를 이용하여
  인터페이스를 일치시키는 패턴

##구성요소
1. Target
 - 클라이언트에게 필요한 메서드를 제공한다.

2. Client
 - Target에서 제공하는 메서드를 사용한다.

3. Adaptee
 - 클라이언트가 원하는 기능을 구현한 메서드를 가지고 있다

4. Adapter
 - Adaptee 가 제공하는 메서드를 사용하고 Target 인터페이스를 구현한다

##사용시점
- 다른 개발자가 작성한 클래스를 재사용해야 한다.
- 클라이언트가 요구하는 인터페이스와 재사용 하려는 클래스의 인터페이스가 일치하지 않는다.
- 애플리케이션에 필요한 기능을 이미 구현한 기존의 클래스가 있는데 수정이 발가능하거나 수정을 하였을 경우에
  버그가 발생할 가능성이 높다.

##느낀점
 - 오랫만에 신선한 패턴을 만난듯 하다. 개념상으로는 동일하지만 구현 방식이 달라서 이용할수 없었던
   클래스를 연결해주는 Adpater 를 이용하여 해당 기능을 사용할수 있도록 만들어주는 구조적 패턴이다.