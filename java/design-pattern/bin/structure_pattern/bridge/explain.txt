#브리지(Bridge)
- 추상적 개념과 구체적 구현 사이의 종속성을 제거하여 목적에 맞게 다양한 구현 방법을 사용하도록 제공하는 패턴

##구성요소
1. Abstraction
 - Implementor 역활의 메서드를 사용해서 기본적인 기능만 기술되어 있는 클래스이다.
 - 이 인스턴스는 Implementor 역활을 가지고 있다.
 - 기본적인 기능만이 서술되어 있고 여기서 기술되어 있는 기능들이 바로 Bridge를 통해서 기능을 위임받은 클래스와 교감할 수 있다.

2. RefinedAbstraction
 - Abstraction 역할에다 기능을 추가한 역활

3. ConcreteImplementor
 - Implementor 인터페이스를 구현한다.

##사용시점
 - 기본 기능과 확장 가능한 기능이 하나의 클래스에 혼재한다.
 - 하나의 미래에 변할 가능성이 별로 없고, 하나는 변할 가능성이 많을때.

##사용효과
 - 추사오하된 부분과 실제 구현 부분을 독립적으로 확장 할 수 있다.

#느낀점
지난번에 한 어답터가 다른 클래스를 이용하기 위한 연결점이였다면 브리지는 그냥 쭉 이어지는 느낌이다
어댑터가 1 -> 2 <- 3 이런 느낌이라면 
브릿지는 1 -> 2 -> 3 이런 느낌인듯 하다